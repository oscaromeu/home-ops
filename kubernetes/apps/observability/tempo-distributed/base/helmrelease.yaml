---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: tempo
spec:
  interval: 15m
  chart:
    spec:
      chart: tempo-distributed
      version: 1.41.1
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    global:
      clusterDomain: 'cluster.local'
    useExternalConfig: false
    reportingEnabled: false
    tempo:
      image:
        registry: docker.io
        pullSecrets: []
        repository: grafana/tempo
        tag: 2.8.0
        pullPolicy: IfNotPresent
      structuredConfig:
        distributor:
          log_received_spans:
            enabled: false
            include_all_attributes: false
            filter_by_status_error: false
          log_discarded_spans:
              enabled: true
              include_all_attributes: false
              filter_by_status_error: false
          receivers:
            otlp:
              protocols:
                grpc:
                  endpoint: 0.0.0.0:4317
                http:
                  endpoint: 0.0.0.0:4318
          ring:
            kvstore:
              store: memberlist
          retry_after_on_resource_exhausted: '1s'
        ingester_client:
            grpc_client_config:
                grpc_compression: "snappy"
        metrics_generator_client:
            grpc_client_config:
                grpc_compression: "snappy"
        querier:
            frontend_worker:
                grpc_client_config:
                    grpc_compression: "snappy"
        ingester:        
          trace_idle_period: '10s'
          flush_check_period: '10s'
          max_block_bytes: 524288000
          max_block_duration: 30m
          complete_block_timeout: 15m
          flush_all_on_shutdown: true
        query_frontend:
          search:
            max_duration: 168h
            query_ingesters_until: 30m
            query_backend_after: 30m
          metrics:
            max_duration: 0
            query_backend_after: 30m
        compactor:
          compaction:
            block_retention: 336h
            compacted_block_retention: 1h
            compaction_window: 1h
            v2_in_buffer_bytes: 5242880
            v2_out_buffer_bytes: 20971520
            max_block_bytes: 107374182400
            retention_concurrency: 10
            v2_prefetch_traces_count: 1000
            max_time_per_tenant: 5m
            compaction_cycle: 30s
    ingester:
      replicas: 1
    metricsGenerator:
      enabled: true
      config:
        registry:
          collection_interval: 15s
          external_labels: {}
          stale_duration: 15m
        storage:
          path: /var/tempo/wal
          wal:
          remote_write_flush_deadline: 1m
          remote_write:
            - url: http://kube-prometheus-stack-prometheus.observability.svc.cluster.local:9090/api/v1/write
        traces_storage:
          path: /var/tempo/traces
        local_blocks:
          filter_server_spans: false
          flush_to_storage: true
        metrics_ingestion_time_range_slack: 30s
    distributor:
      replicas: 1
    compactor:
      replicas: 1
    queryFrontend:
      replicas: 1
    traces:
      otlp:
        http:
          enabled: true
        grpc:
          enabled: true
    storage:
      trace:
        backend: s3
        s3:
          insecure: true  # optional. enable if endpoint is http
          bucket: "tempo-data"
    overrides:
      defaults:
        metrics_generator:
          processors:
            - service-graphs
            - span-metrics
            - local-blocks
    gateway:
      enabled: true
      replicas: 1
      #resources:
      #  requests:
      #    cpu: "500m"
      #    memory: "1Gi"
      #  limits:
      #    memory: "2Gi"
    metaMonitoring:
      serviceMonitor:
        enabled: false