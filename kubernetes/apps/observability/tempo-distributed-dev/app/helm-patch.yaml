---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: tempo
spec:
  interval: 15m
  chart:
    spec:
      chart: tempo-distributed
      version: 1.41.1
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  valuesFrom:
    - targetPath: storage.trace.s3.endpoint
      kind: Secret
      name: tempo-s3-secret
      valuesKey: endpoint
    - targetPath: storage.trace.s3.access_key
      kind: Secret
      name: tempo-s3-secret
      valuesKey: access_key
    - targetPath: storage.trace.s3.secret_key
      kind: Secret
      name: tempo-s3-secret
      valuesKey: secret_key
  values:
    global:
      clusterDomain: 'cluster.local'
    useExternalConfig: false
    reportingEnabled: false
    tempo:
      image:
        registry: docker.io
        pullSecrets: []
        repository: grafana/tempo
        tag: 2.8.0
        pullPolicy: IfNotPresent
      structuredConfig:
        query_frontend:
          search:
            max_duration: 4380h
          metrics:
            max_duration: 4380h
        compactor:
          compaction:
            block_retention: 4380h
    ingester:
      replicas: 2
      #resources:
      #  requests:
      #    cpu: "500m"
      #    memory: "1Gi"
      #  limits:
      #    memory: "2Gi"
      extraArgs:
        - "-config.expand-env=true"
      persistence:
        enabled: true
        storageClass: openebs-hostpath
        size: 10Gi  
    metricsGenerator:
      enabled: true
      #resources:
      #  requests:
      #    cpu: "500m"
      #    memory: "1Gi"
      #  limits:
      #    memory: "2Gi"
      config:
        registry:
          collection_interval: 15s
          external_labels: {}
          stale_duration: 15m
        storage:
          path: /var/tempo/wal
          wal:
          remote_write_flush_deadline: 1m
          remote_write:
            - url: http://kube-prometheus-stack-prometheus.observability.svc.cluster.local:9090/api/v1/write
        traces_storage:
          path: /var/tempo/traces
        metrics_ingestion_time_range_slack: 30s
      extraArgs:
        - "-config.expand-env=true"
      persistence:
        enabled: true
        storageClass: openebs-hostpath
        size: 10Gi
    distributor:
      replicas: 1
      #resources:
      #  requests:
      #    cpu: "500m"
      #    memory: "1Gi"
      #  limits:
      #    memory: "2Gi"
      extraArgs:
        - "-config.expand-env=true"
    compactor:
      replicas: 1
      #resources:
      #  requests:
      #    cpu: "500m"
      #    memory: "1Gi"
      #  limits:
      #    memory: "2Gi"
      extraArgs:
        - "-config.expand-env=true"
    querier:
      extraArgs:
        - "-config.expand-env=true"
      #resources:
      #  requests:
      #    cpu: "500m"
      #    memory: "1Gi"
      #  limits:
      #    memory: "2Gi"
    queryFrontend:
      replicas: 1
      #resources:
      #  requests:
      #    cpu: "500m"
      #    memory: "1Gi"
      #  limits:
      #    memory: "2Gi"
      extraArgs:
        - "-config.expand-env=true"
    storage:
      trace:
        backend: s3
        s3:
          insecure: true  # optional. enable if endpoint is http
          bucket: tempo-data
          region: ''
    overrides:
      defaults:
        metrics_generator:
          processors:
            - service-graphs
            - span-metrics
            - local-blocks
    gateway:
      enabled: true
      replicas: 1
      #resources:
      #  requests:
      #    cpu: "500m"
      #    memory: "1Gi"
      #  limits:
      #    memory: "2Gi"
    metaMonitoring:
      serviceMonitor:
        enabled: true