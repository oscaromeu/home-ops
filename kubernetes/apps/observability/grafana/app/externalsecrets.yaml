apiVersion: v1
kind: Secret
metadata:
    name: grafana-admin-secret
    namespace: observability
stringData:
    admin-user: "{{ .GRAFANA_USER }}"
    admin-password: "{{ .GRAFANA_PASSWORD }}"
    # Database
    GF_DATABASE_NAME: &dbName grafana
    GF_DATABASE_HOST: &dbUrl postgres-rw.database.svc.cluster.local
    GF_DATABASE_USER: &dbUser "{{ .GRAFANA_POSTGRES_USER }}"
    GF_DATABASE_PASSWORD: &dbPass "{{ .GRAFANA_POSTGRES_PASS }}"
    # Database Init
    INIT_POSTGRES_DBNAME: *dbName
    INIT_POSTGRES_HOST: *dbUrl
    INIT_POSTGRES_USER: *dbUser
    INIT_POSTGRES_PASS: *dbPass
    INIT_POSTGRES_SUPER_PASS: "{{ .POSTGRES_SUPER_PASS }}"
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: grafana-admin-secret
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: grafana-admin-secret
    creationPolicy: Owner
    deletionPolicy: "Delete"
    template:
      engineVersion: v2
      data:
        admin-user: "{{ .GRAFANA_USER }}"
        admin-password: "{{ .GRAFANA_PASSWORD }}"
        # Database
        GF_DATABASE_NAME: &dbName grafana
        GF_DATABASE_HOST: &dbUrl postgres-rw.database.svc.cluster.local
        GF_DATABASE_USER: &dbUser "{{ .GRAFANA_POSTGRES_USER }}"
        GF_DATABASE_PASSWORD: &dbPass "{{ .GRAFANA_POSTGRES_PASS }}"
        # Database Init
        INIT_POSTGRES_DBNAME: *dbName
        INIT_POSTGRES_HOST: *dbUrl
        INIT_POSTGRES_USER: *dbUser
        INIT_POSTGRES_PASS: *dbPass
        INIT_POSTGRES_SUPER_PASS: "{{ .POSTGRES_SUPER_PASS }}"
  dataFrom:
    - find:
        path: cloudnative-postgres
        name:
          regexp: "^CNPG.*"
    - find:
        path: grafana
        name:
          regexp: "^GRAFANA.*"