---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres-v1
spec:
  #logLevel: info
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:16.1-6
  primaryUpdateStrategy: unsupervised
  storage:
    size: 20Gi
    storageClass: openebs-hostpath
  superuserSecret:
    name: cloudnative-pg-secret
  enableSuperuserAccess: true

  # Note: Bootstrap is needed when recovering from an existing cnpg cluster
  #bootstrap:
  #  recovery:
  #    source: &previousCluster postgres-v5

  postgresql:
    parameters:
      max_connections: "600"
      max_slot_wal_keep_size: 10GB
      shared_buffers: 512MB

  resources:
    requests:
      memory: "3Gi"
      cpu: "500m"
    limits:
      memory: "5Gi"
    #pg_hba:
    #  - host all all all trust

  monitoring:
    enablePodMonitor: true

  #backup:
  #  retentionPolicy: 30d
  #  barmanObjectStore:
  #    destinationPath: gs://cloudnative-pg-v1/
  #    googleCredentials:
  #      applicationCredentials:
  #        name: backup-creds
  #        key: gcsCredentials
  #    serverName: &currentCluster postgres1-v1
  #    wal:
  #      compression: bzip2
  #      maxParallel: 8

  # Note: externalClusters is needed when recovering from an existing cnpg cluster
  #externalClusters:
  #  - name: *previousCluster
  #    barmanObjectStore:
  #      serverName: *previousCluster
  #      wal:
  #        compression: bzip2
  #        maxParallel: 8
  #      destinationPath: s3://cloudnative-pg-v1/
  #      endpointURL: "http://default-hl.default.svc.cluster.local:9000"
  #      s3Credentials:
  #        accessKeyId:
  #          name: cloudnative-pg-secret
  #          key: AWS_ACCESS_KEY_ID
  #        secretAccessKey:
  #          name: cloudnative-pg-secret
  #          key: AWS_SECRET_ACCESS_KEY
